# assume t ~ t_(df = 25)(mu = 0, sigma^2 = 1)
help(pt)
# t-stat = 2.3, df = 25
# one - sided pvalue
# P(t > 2.3)
pt(q = 2.3, df = 25, lower.tail = F)
# two-sided pvalue
pt(q = 2.3, df = 25, lower.tail = F) + pt(q=-2.3,df = 25, lower.tail = T)
pt(q = 2.3, df = 25, lower.tail = F)*2
# find t - value for 95% confidence
# value of t with 2.5% in each tail
qt(p=0.025, df = 25, lower.tail = T)
help(pf)
help(exp)
# Conductin One-Sample t-test and Constructing One-Sample Confidence Interval for the Mean
# The one-sample t-test and confidence interval are parametric methods appropriate for examining a single numberic variable
getwd()
setwd(StatisticalTests)
setwd(/Users/elisabethgrieger/Documents/RTutorials/StatisticalTests)
setwd(Users/elisabethgrieger/Documents/RTutorials/StatisticalTests)
setwd("/Users/elisabethgrieger/Documents/RTutorials/StatisticalTests")
# This is to read in the data, adn save it as LungCapData
LungCapData <- read.table(file="~/Documents/RTutorials/Project1/LungCapData.txt", header = T, sep = "\t")
# Attach the data
attach(LungCapData)
# This is to read in the data, adn save it as LungCapData
LungCapData <- read.table(file="~/Documents/RTutorials/Basics/LungCapData.txt", header = T, sep = "\t")
# Attach the data
attach(LungCapData)
help("t.test)
help(t.test)
""
help(t.test)
?t.test
exit
"
help(t.test)
# before beginning any analysis its useful to examine the data, e.g. using a boxplot
boxplot(LungCap)
# H_0: mu < 8
# 95% confidence interval for mu
t.test(LungCap, mu = 8, alternative = "less", conf.leve = 0.95)
# 95% confidence interval, -IN 8.025974 means (-Inf, 8.025974)
t.test(LungCap, mu = 8, alt = "less", conf = 0.95)
# two-sided
t.test(LungCap, mu = 8, alt = "two-sided", conf = 0.95)
t.test(LungCap, mu = 8, alt = "two.sided", conf = 0.95)
# two.sided is default so don't need to specify it,
t.test(LungCap, mu = 8, conf = 0.95)
t.test(LungCap, mu = 8, conf = 0.99)
TEST <- t.test(LungCap, mu = 8, conf = 0.99)
TEST
attributes(TEST)
TEST$conf.int
TEST$p.value
help("t.test")
boxplot(LungCap ~ Smoke)
# H_0: mean lung cap of smokers = of non smokers
# two sided test
# assume non - equal variances
t.test(LungCap ~ Smoke, mu = 0, alt = "two,sided", conf = 0.95, var.eq = F, paired = F)
t.test(LungCap ~ Smoke, mu = 0, alt = "two.sided", conf = 0.95, var.eq = F, paired = F)
# all of the arguments above are default values so don't need to be entered
t.test(LungCap ~ Smoke)
# alternative notion for the ~:
t.test(LungCap[Smoke == "no"], LungCap[Smoke == "yes"])
#Â how to decide whether to use equal or non - equal variance:
# look at boxplot and see whether they look the same, alternatively compute the sample variances:
var(LungCap[Smoke == "yes"])
var(LungCap[Smoke == "no"])
# alternatively use Levene's test
# H_0: population variacnes are equal
# need to install the car ("Companio to Applied Regression") package
library(car)
